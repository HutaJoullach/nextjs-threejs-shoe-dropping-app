import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";

import { RouterOutputs, api } from "~/utils/api";
// import { PageLayout } from "~/components/layout";

const CreateObjectWizard = () => {
  const { user } = useUser();

  // console.log(user);

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <img
        src={user.profileImageUrl}
        alt="Profile image"
        className="h-10 w-10 rounded-full"
      />
      <input
        placeholder="Type some text"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

// type ObjectWithUser = RouterOutputs["objects"]["getAll"][number];
// const CanvasContainer = (props: { object: ObjectWithUser }) => {};

// type ObjectWithUser = RouterOutputs["objects"]["getAll"][number];
// const CanvasContainer = (props: ObjectWithUser) => {
//   const {object, author} = props;
// };

type ObjectWithUser = RouterOutputs["objects"]["getAll"][number];
const CanvasContainer = (props: ObjectWithUser) => {
  const { object, author } = props;
  return (
    <div key={object.id} className="p-2">
      {object.objectType}
    </div>
  );
};

const Sandbox: NextPage = () => {
  const user = useUser();

  const { data, isLoading } = api.objects.getAll.useQuery();

  // if (isLoading) return <div>Loading...</div>;

  if (!data) return <div>Something went wrong</div>;

  return (
    <>
      <Head>
        <title>Sandbox</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/alphabet.svg" />
      </Head>
      {/* <PageLayout></PageLayout> */}
      <div className="h-full w-full md:max-w-7xl">
        <div className="flex border-b border-slate-400 p-4">
          {!user.isSignedIn && (
            <div className="flex justify-center">
              <SignInButton />
            </div>
          )}
          {!!user.isSignedIn && (
            <div className="flex justify-center">
              <CreateObjectWizard />
              <SignOutButton />
            </div>
          )}
        </div>
        <div>
          {data?.map((objectData) => (
            <CanvasContainer {...objectData} key={objectData.object.id} />
          ))}
        </div>
      </div>
    </>
  );
};

export default Sandbox;
